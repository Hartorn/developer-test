# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
executors:
  # https://circleci.com/docs/docker-compose/#using-docker-compose-with-machine-executor
  # here we can define an executor that will be shared across different jobs
  dck-executor:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
      resource_class: medium
    # docker:
    # - image: cimg/base:current

jobs:
  install:
    executor: dck-executor
    steps:
    # - setup_remote_docker
    - checkout
    # Download and cache dependencies
    - restore_cache:
          keys:
              - deps-backend-{{ checksum "backend/poetry.lock" }}
              # fallback to using the latest cache if no exact match is found
              - deps-backend
    - restore_cache:
          keys:
              - deps-frontend-{{ checksum "frontend/package-lock.json" }}
              # fallback to using the latest cache if no exact match is found
              - deps-frontend
    - run:
        name: Build docker & installation of dependencies
        command: make setup
    - save_cache:
          paths:
              - ./backend/.venv
          key: deps-backend-{{ checksum "backend/poetry.lock" }}
    - save_cache:
          paths:
              - ./frontend/node_modules
          key: deps-frontend-{{ checksum "frontend/package-lock.json" }}

  unit-tests:
      executor: dck-executor
      steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
                keys:
                    - deps-backend-{{ checksum "backend/poetry.lock" }}
          - restore_cache:
                keys:
                    - deps-frontend-{{ checksum "frontend/package-lock.json" }}
          - run:
              name: Force recreation of .env
              command: make _env
          - run:
                name: Run unit tests
                command: make test
  check-format:
      executor: dck-executor
      steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
                keys:
                    - deps-backend-{{ checksum "backend/poetry.lock" }}
          - restore_cache:
                keys:
                    - deps-frontend-{{ checksum "frontend/package-lock.json" }}
          - run:
              name: Force recreation of .env
              command: make _env
          - run:
                name: Run check_format
                command: make check_format
  check-linting:
      executor: dck-executor
      steps:
          - checkout
          # Download and cache dependencies
          - restore_cache:
                keys:
                    - deps-backend-{{ checksum "backend/poetry.lock" }}
          - restore_cache:
                keys:
                    - deps-frontend-{{ checksum "frontend/package-lock.json" }}
          - run:
              name: Force recreation of .env
              command: make _env
          - run:
                name: Run check_linting
                command: make check_linting
  build:
      executor: dck-executor
      steps:
          - checkout
          # Download and cache dependencies
          - run:
                name: Run build
                command: make build

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  develop-PR:
    jobs:
      - install
      - unit-tests:
            requires:
                - install
      - check-linting:
            requires:
                - install
      - check-format:
            requires:
                - install
      - build
